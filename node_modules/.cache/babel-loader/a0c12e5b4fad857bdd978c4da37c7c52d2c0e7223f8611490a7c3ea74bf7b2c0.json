{"ast":null,"code":"var _jsxFileName = \"/home/katherinee/Desktop/solana/module 1/react-metamask-ethers/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './MetaMask_Fox.svg';\nimport metamaskimage from './metamask-icon.png';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { Buffer } from 'buffer';\nimport { createTransaction } from \"./sendMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ethers = require('ethers');\nfunction App() {\n  _s();\n  const [haveMetamask, sethaveMetamask] = useState(true);\n  const [accountAddress, setAccountAddress] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [signatureCopied, setSignatureCopied] = useState(false);\n  const [addressCopied, setAddressCopied] = useState(false);\n  const [signed, setSigned] = useState(false);\n  let signature = '';\n  const {\n    ethereum\n  } = window;\n  const [sig, setSig] = useState('');\n  // const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n  useEffect(() => {\n    if (signatureCopied || addressCopied) {\n      const timer = setTimeout(() => {\n        setSignatureCopied(false);\n        setAddressCopied(false);\n      }, 1000); // Thời gian để ẩn thông báo (đơn vị: ms)\n\n      return () => clearTimeout(timer);\n    }\n    const {\n      ethereum\n    } = window;\n    const checkMetamaskAvailability = async () => {\n      if (!ethereum) {\n        sethaveMetamask(false);\n      }\n      sethaveMetamask(true);\n    };\n    checkMetamaskAvailability();\n  }, [signatureCopied, addressCopied]);\n  const connectWallet = async () => {\n    try {\n      if (!ethereum) {\n        sethaveMetamask(false);\n      }\n      const accounts = await ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      setAccountAddress(accounts[0]);\n      setIsConnected(true);\n    } catch (error) {\n      setIsConnected(false);\n    }\n  };\n  const disconnectWallet = async () => {\n    try {\n      setIsConnected(false);\n      setAccountAddress('');\n    } catch (error) {\n      setIsConnected(true);\n    }\n  };\n  web3.Trans;\n  const signMessage = async () => {\n    setSigned(false);\n    const messageInput = document.getElementById('message-input');\n    const message = messageInput.value;\n    let msg = `0x${Buffer.from(message, 'utf8').toString('hex')}`;\n    signature = await ethereum.request({\n      method: 'personal_sign',\n      params: [msg, accountAddress, 'Example password']\n    });\n    const recoveredAddress = ethers.utils.verifyMessage(message, signature);\n    if (recoveredAddress.toLowerCase() === accountAddress) {\n      alert('Signature verified');\n      messageInput.value = '';\n      const transactionBase64 = await createTransaction(message, recoveredAddress, signature);\n      console.log(transactionBase64);\n      // setSig(createTransaction(message, recoveredAddress, signature));\n      setSigned(true);\n    } else {\n      alert('Signature failed');\n    }\n  };\n  const copyAddessToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(accountAddress);\n      setAddressCopied(true);\n    } catch (err) {\n      alert(\"Failed to copy signature to clipboard.\");\n    }\n  };\n  const copySignatureToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(sig);\n      setSignatureCopied(true);\n    } catch (err) {\n      alert(\"Failed to copy signature to clipboard.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: haveMetamask ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-header\",\n        children: [isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metamask-button\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: metamaskimage,\n                alt: \"Metamask\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"wallet-address\",\n                onClick: copyAddessToClipboard,\n                children: [accountAddress.slice(0, 10), \"...\", accountAddress.slice(-10)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 21\n              }, this), addressCopied && /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  position: \"absolute\",\n                  top: \"-40px\",\n                  right: 0,\n                  fontSize: \"20px\",\n                  backgroundColor: \"white\"\n                },\n                children: \"Copied\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Sign Message:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"message-input\",\n                className: \"message-input\",\n                placeholder: \"Enter a message to sign\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn\",\n                onClick: signMessage,\n                children: \"Sign Message\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 21\n              }, this), signed && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Transaction hash:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"metamask-button\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    id: \"wallet-address\",\n                    onClick: copySignatureToClipboard,\n                    children: [sig.slice(0, 10), \"...\", sig.slice(-10)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 27\n                  }, this), signatureCopied && /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      position: \"absolute\",\n                      top: \"-40px\",\n                      right: 0,\n                      fontSize: \"20px\",\n                      backgroundColor: \"white\"\n                    },\n                    children: \"Copied\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this), isConnected ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: disconnectWallet,\n          children: \"Disconnect MataMask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: connectWallet,\n          children: \"Connect MataMask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please Install MataMask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MiZjhlhXtRyIcxCay4rBKvbRAvY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","metamaskimage","useState","useEffect","Buffer","createTransaction","jsxDEV","_jsxDEV","ethers","require","App","_s","haveMetamask","sethaveMetamask","accountAddress","setAccountAddress","isConnected","setIsConnected","signatureCopied","setSignatureCopied","addressCopied","setAddressCopied","signed","setSigned","signature","ethereum","window","sig","setSig","timer","setTimeout","clearTimeout","checkMetamaskAvailability","connectWallet","accounts","request","method","error","disconnectWallet","web3","Trans","signMessage","messageInput","document","getElementById","message","value","msg","from","toString","params","recoveredAddress","utils","verifyMessage","toLowerCase","alert","transactionBase64","console","log","copyAddessToClipboard","navigator","clipboard","writeText","err","copySignatureToClipboard","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","slice","style","position","top","right","fontSize","backgroundColor","type","placeholder","_c","$RefreshReg$"],"sources":["/home/katherinee/Desktop/solana/module 1/react-metamask-ethers/src/App.js"],"sourcesContent":["import logo from './MetaMask_Fox.svg';\nimport metamaskimage from './metamask-icon.png';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { Buffer } from 'buffer';\nimport { createTransaction } from \"./sendMessage\";\nconst ethers = require('ethers');\n\nfunction App() {\n  const [haveMetamask, sethaveMetamask] = useState(true);\n  const [accountAddress, setAccountAddress] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [signatureCopied, setSignatureCopied] = useState(false);\n  const [addressCopied, setAddressCopied] = useState(false);\n  const [signed, setSigned] = useState(false);\n  let signature = '';\n  const { ethereum } = window;\n  const [sig, setSig] = useState('');\n  // const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n  useEffect(() => {\n    if (signatureCopied || addressCopied) {\n      const timer = setTimeout(() => {\n        setSignatureCopied(false);\n        setAddressCopied(false);\n      }, 1000); // Thời gian để ẩn thông báo (đơn vị: ms)\n  \n      return () => clearTimeout(timer);\n    }\n\n    const { ethereum } = window;\n    const checkMetamaskAvailability = async () => {\n      if (!ethereum) {\n        sethaveMetamask(false);\n      }\n      sethaveMetamask(true);\n    };\n    checkMetamaskAvailability();\n  }, [signatureCopied, addressCopied]);\n\n  const connectWallet = async () => {\n    try {\n      if (!ethereum) {\n        sethaveMetamask(false);\n      }\n      const accounts = await ethereum.request({\n        method: 'eth_requestAccounts',\n      });\n      setAccountAddress(accounts[0]);\n      setIsConnected(true);\n    } catch (error) {\n      setIsConnected(false);\n    }\n  };\n\n  const disconnectWallet = async () => {\n    try {\n      setIsConnected(false);\n      setAccountAddress('');\n    } catch (error) {\n      setIsConnected(true);\n    }\n  };\n  web3.Trans\n\n  const signMessage = async () => {\n    setSigned(false);\n    const messageInput = document.getElementById('message-input');\n    const message = messageInput.value;\n\n    let msg = `0x${Buffer.from(message, 'utf8').toString('hex')}`;\n    \n    signature = await ethereum.request({\n      method: 'personal_sign',\n      params: [msg, accountAddress, 'Example password'],\n    });\n\n    const recoveredAddress = ethers.utils.verifyMessage(message, signature); \n\n    if (recoveredAddress.toLowerCase() === accountAddress) {\n      alert('Signature verified');\n      messageInput.value = '';\n      const transactionBase64 = await createTransaction(message, recoveredAddress, signature);\n      console.log(transactionBase64);\n      // setSig(createTransaction(message, recoveredAddress, signature));\n      setSigned(true);\n    } else {\n      alert('Signature failed');\n    }\n  };\n\n  const copyAddessToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(accountAddress);\n      setAddressCopied(true);\n    } catch (err) {\n      alert(\"Failed to copy signature to clipboard.\");\n    }\n  };\n\n  const copySignatureToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(sig);\n      setSignatureCopied(true);\n    } catch (err) {\n      alert(\"Failed to copy signature to clipboard.\");\n    }\n  };\n  \n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {haveMetamask ? (\n          <div className=\"App-header\">\n            {isConnected ? (\n              <div className=\"card\">\n                <div className=\"card-row\">\n                  <div className=\"metamask-button\">\n                    <img src={metamaskimage} alt=\"Metamask\" />\n                    <span id=\"wallet-address\" onClick={copyAddessToClipboard}>{accountAddress.slice(0,10)}...{accountAddress.slice(-10)}</span>\n                    {addressCopied && (\n                      <span style={{ position: \"absolute\", top: \"-40px\", right: 0 , fontSize: \"20px\", backgroundColor:\"white\"}}>Copied</span>\n                    )}\n                  </div>\n                  <div className=\"card-row\">\n                    <h3>Sign Message:</h3>\n                    <input\n                      type=\"text\"\n                      id=\"message-input\"\n                      className=\"message-input\"\n                      placeholder=\"Enter a message to sign\"/>\n                    <button className=\"btn\" onClick={signMessage}>\n                      Sign Message\n                    </button>\n                    {signed && (\n                      <div className=\"card-row\">\n                        <h3>Transaction hash:</h3>\n                        <div className=\"metamask-button\">\n                          <span id=\"wallet-address\" onClick={copySignatureToClipboard}>{sig.slice(0,10)}...{sig.slice(-10)}</span>\n                          {signatureCopied && (\n                            <span style={{ position: \"absolute\", top: \"-40px\", right: 0 , fontSize: \"20px\", backgroundColor:\"white\"}}>Copied</span>\n                          )}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            )}\n            {isConnected ? (\n              <button className=\"btn\" onClick={disconnectWallet}>\n                Disconnect MataMask\n              </button>\n            ) : (\n              <button className=\"btn\" onClick={connectWallet}>\n                Connect MataMask\n              </button>\n              \n            )}\n          </div>\n        ) : (\n          <p>Please Install MataMask</p>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}